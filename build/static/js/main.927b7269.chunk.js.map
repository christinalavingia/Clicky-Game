{"version":3,"sources":["images sync /^/.//.*$","images/cam-erving.png","images/chris-jones.png","images/damien-williams.png","images/dustin-colquitt.png","images/eric-fisher.png","images/harrison-butker.png","images/mitchell-schwartz.png","images/patrick-mahomes.png","images/reggie-ragland.png","images/sammy-watkins.png","images/travis-kelce.png","images/tyreek-hill.png","components/Navbar/Navbar.js","components/Jumbotron/Jumbotron.js","components/PlayerCard/PlayerCard.js","App.js","serviceWorker.js","index.js"],"names":["map","./cam-erving.png","./chris-jones.png","./damien-williams.png","./dustin-colquitt.png","./eric-fisher.png","./harrison-butker.png","./mitchell-schwartz.png","./patrick-mahomes.png","./reggie-ragland.png","./sammy-watkins.png","./travis-kelce.png","./tyreek-hill.png","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","p","Navbar","react_default","a","createElement","className","this","props","score","Component","Jumbotron","PlayerCard","onClick","imageClick","alt","image","replace","src","require","App","state","chiefs","clickedChiefs","event","currentChief","target","_this","clickedChief","filter","setState","sort","b","Math","random","alert","push","_this2","components_Navbar_Navbar","components_Jumbotron_Jumbotron","components_PlayerCard_PlayerCard","key","React","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.927b7269.chunk.js","sourcesContent":["var map = {\n\t\"./cam-erving.png\": 20,\n\t\"./chris-jones.png\": 21,\n\t\"./damien-williams.png\": 22,\n\t\"./dustin-colquitt.png\": 23,\n\t\"./eric-fisher.png\": 24,\n\t\"./harrison-butker.png\": 25,\n\t\"./mitchell-schwartz.png\": 26,\n\t\"./patrick-mahomes.png\": 27,\n\t\"./reggie-ragland.png\": 28,\n\t\"./sammy-watkins.png\": 29,\n\t\"./travis-kelce.png\": 30,\n\t\"./tyreek-hill.png\": 31\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 19;","module.exports = __webpack_public_path__ + \"static/media/cam-erving.71f3ec58.png\";","module.exports = __webpack_public_path__ + \"static/media/chris-jones.add22f8f.png\";","module.exports = __webpack_public_path__ + \"static/media/damien-williams.99ea222f.png\";","module.exports = __webpack_public_path__ + \"static/media/dustin-colquitt.c2b03ffc.png\";","module.exports = __webpack_public_path__ + \"static/media/eric-fisher.6836c35f.png\";","module.exports = __webpack_public_path__ + \"static/media/harrison-butker.423a7aee.png\";","module.exports = __webpack_public_path__ + \"static/media/mitchell-schwartz.514f3888.png\";","module.exports = __webpack_public_path__ + \"static/media/patrick-mahomes.34d201f3.png\";","module.exports = __webpack_public_path__ + \"static/media/reggie-ragland.9969cc4d.png\";","module.exports = __webpack_public_path__ + \"static/media/sammy-watkins.195a59f7.png\";","module.exports = __webpack_public_path__ + \"static/media/travis-kelce.70f09f50.png\";","module.exports = __webpack_public_path__ + \"static/media/tyreek-hill.514d250f.png\";","import React, { Component } from \"react\";\nimport \"./Navbar.css\";\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-default navbar-fixed-top\">\n         <ul>\n          <li className=\"itemLeft\">Chiefs Memory Game</li>\n          <li className=\"itemCenter\">Click an Image to Begin</li>\n          <li className=\"itemRight\">Score: {this.props.score}</li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;","import React from \"react\";\nimport \"./Jumbotron.css\";\n\nconst Jumbotron = () => (\n\t<header className = \"jumbotron\">\n\t\t<h1>Kansas City Chiefs Clicky Game!</h1>\n\t\t<h3>Click on any image to earn a point, but don't click on the same picture more than once. Click all 12 pictures to win the game!</h3>\n\t</header>\n);\nexport default Jumbotron;","import React from \"react\";\nimport \"./PlayerCard.css\";\n\nconst PlayerCard = props => (\n  <div className=\"card\" onClick={props.imageClick}>\n    <div className=\"img-container\">\n      <img alt={props.image.replace(\".png\", \"\")} src={require(\"../../images/\" + props.image)} />\n    </div>\n  </div>\n);\n\nexport default PlayerCard;","import React from \"react\";\nimport Navbar from \"./components/Navbar/Navbar.js\";\nimport Jumbotron from \"./components/Jumbotron/Jumbotron.js\";\nimport PlayerCard from \"./components/PlayerCard/PlayerCard.js\";\nimport chiefs from \"./chiefs.json\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    chiefs,\n    clickedChiefs: [],\n    score: 0\n  };\n\n  imageClick = event => {\n    const currentChief = event.target.alt;\n    const ChiefAlreadyClicked =\n      this.state.clickedChief.filter(currentChief) > -1;\n\n    if (ChiefAlreadyClicked) {\n      this.setState({\n        chiefs: this.state.chiefs.sort(function(a, b) {\n          return 0.5 - Math.random();\n        }),\n        clickedChiefs: [],\n        score: 0\n      });\n        alert(\"You clicked the same Chief! You lose, play again?\");\n\n    } else {\n      this.setState(\n        {\n          chiefs: this.state.chiefs.sort(function(a, b) {\n            return 0.5 - Math.random();\n          }),\n          clickedChiefs: this.state.clickedChiefs.push(\n            currentChief\n          ),\n          score: this.state.score + 1\n        },\n        () => {\n          if (this.state.score === 12) {\n            alert(\"Yay! You Win!\");\n            this.setState({\n              chiefs: this.state.chiefs.sort(function(a, b) {\n                return 0.5 - Math.random();\n              }),\n              clickedChiefs: [],\n              score: 0\n            });\n          }\n        }\n      );\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Navbar \n          score={this.state.score}\n        />\n        <Jumbotron />\n        <div className=\"wrapper\">\n          {this.state.chiefs.map(chiefs => (\n            <PlayerCard\n              imageClick={this.imageClick}\n              id={chiefs.id}\n              key={chiefs.id}\n              image={chiefs.image}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}